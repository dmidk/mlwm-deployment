name: Create and publish a Docker image


on:
  push:
    branches:
      - main
  workflow_dispatch:
    # Allows manual trigger for any branch (including PRs)

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        config:
          #- gefion1_FakeDINI+FakeIFS+FakeDINI
          - surface-dummy-model_DINI
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@main
        with:
          # this might remove tools that are actually needed,
          # when set to "true" but frees about 6 GB
          tool-cache: true

          android: true
          dotnet: true
          haskell: true
          large-packages: true
          swap-storage: true

      - name: Build Docker image
        run: |
          cd configurations/${{ matrix.config }}
          AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} MLWM_PULL_PROXY="" ./build_image.sh

      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | podman login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Get latest built image
        id: latest_image
        run: |
          IMAGE=$(podman images --format '{{.Repository}}:{{.Tag}}' --sort created | head -n 1)
          echo "IMAGE=$IMAGE" >> $GITHUB_ENV
          # Convert matrix.config to lowercase for the image name
          GHCR_IMAGE=ghcr.io/${{ github.repository_owner }}/$(echo "${{ matrix.config }}" | tr '[:upper:]' '[:lower:]'):latest
          echo "GHCR_IMAGE=$GHCR_IMAGE" >> $GITHUB_ENV

      - name: Tag image for ghcr.io
        run: podman tag $IMAGE $GHCR_IMAGE

      - name: Push image to ghcr.io
        if: github.ref == 'refs/heads/main'
        run: podman push $GHCR_IMAGE
